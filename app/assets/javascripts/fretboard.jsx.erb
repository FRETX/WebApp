
function Fretboard(parent) {
  this.state = {
    lefty: false,
    name: 'No Chord',
    fingering: [0],
  	strings: [
  	  { frets: [ {val:0}, {val:0}, {val:0}, {val:0}, {val:0} ] },
      { frets: [ {val:0}, {val:0}, {val:0}, {val:0}, {val:0} ] },
      { frets: [ {val:0}, {val:0}, {val:0}, {val:0}, {val:0} ] },
      { frets: [ {val:0}, {val:0}, {val:0}, {val:0}, {val:0} ] },
      { frets: [ {val:0}, {val:0}, {val:0}, {val:0}, {val:0} ] },
      { frets: [ {val:0}, {val:0}, {val:0}, {val:0}, {val:0} ] }
  	]
  }
  parent.addEventListener('resize', this.on_resize.bind(this) );
  this.build_dom(parent);
  this.bind_dom();
  this.load_styles();
  this.bind_handlers();
}

Fretboard.prototype = {
  constructor:   Fretboard,

  build_dom(parent) { this.dom = render(this.HTML);  if(!empty(parent)) parent.appendChild(this.dom); },
  bind_dom()        { rivets.bind(this.dom, { data: this.state, this: this }); },
  load_styles()     { load_css('fretboard_styles', this.CSS); },

  reset() {
    this.state.name = 'No Chord';
    this.state.fingering = [0];
    this.clear_display();
  },

  load_chord(chord) {
    // console.log(chord.name);
    if(chord.root_value == 0 ) { this.reset(); return; }
    if(this.state.fingering == chord.fingering) return;
    this.state.name = chord.name;
    this.state.fingering = chord.fingering;
    this.update_display();
  },

  load_cmd(cmd) {
    console.log(cmd)
    if(this.state.fingering == cmd) return;
    this.state.fingering = cmd;
    this.update_display();
  },

  update_display() {
    this.clear_display();
    for(var i=0; i<this.state.fingering.length; i++) {
      if(this.state.fingering[i]==0) break;
      var cmd = this.state.fingering[i].toLocaleString('en-US', { minimumIntegerDigits: 2, useGrouping: false }).split('');
      this.state.strings[cmd[1]-1].frets[cmd[0]].val = 1; 
    }
    
  },

  bind_handlers() {
    this.tog_lefty = this.tog_lefty.bind(this);
    this.set_left  = this.set_left.bind(this);
    this.set_right = this.set_right.bind(this);
  },

  tog_lefty()    { this.lefty = !this.lefty; },
  get lefty()    { return this.state.lefty;  },
  set lefty(val) { 
    this.state.lefty = val; 
    if(this.state.lefty) { this.dom.className = 'lefty'; }
    else                 { this.dom.className = ''; } 
    this.update_display();
  },

  set_left()  { this.lefty = true;  },
  set_right() { this.lefty = false; },

  on_resize(e) {
    console.log(e);
  },

  clear_display() {
    for(var i=0; i<6; i++) {
      for(var j=0; j<5; j++) {
        this.state.strings[i].frets[j].val = 0;
      }
    }
  }

}

//////////////////////////////////////// HTML TEMPLATE ////////////////////////////////////////////////////

Fretboard.prototype.HTML = `

  <div>
    <div class='fret-holder'>
      <div class='line' rv-each-string='data.strings'>
        <div class='fret' rv-each-fret='string.frets'>
          <div class='dot' rv-data-state='fret.val'></div>
        </div>
      </div>
    </div>
    <div class='dominant-hand-select'>
      <a class='lefty' rv-data-sel='data.lefty'       rv-on-click='this.set_left'>
        <img src='<%= asset_path('lefty-ico.png') %>'/>
        Lefty
      </a>
      <a class='righty' rv-data-sel='data.lefty | not' rv-on-click='this.set_right'>
        Righty
        <img src='<%= asset_path('righty-ico.png') %>'/>
      </a>
    </div>
</div>

`;

//////////////////////////////////////// HTML TEMPLATE ////////////////////////////////////////////////////